name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: {{`${{ matrix.go-version }}`}}
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Run memory profiling
      run: |
        go test -memprofile=mem.prof -run=Memory ./... || true
        if [ -f mem.prof ]; then
          go tool pprof -top mem.prof | head -20
        fi

    - name: Run linter
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest

    - name: Security scan
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        gosec -quiet ./...

    - name: Build
      run: go build -v ./...

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-{{.ProjectName}}

  {{if .IncludeDocker}}
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: {{`${{ secrets.DOCKER_USERNAME }}`}}
        password: {{`${{ secrets.DOCKER_PASSWORD }}`}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          {{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:latest
          {{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:{{`${{ github.sha }}`}}
        cache-from: type=registry,ref={{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:buildcache
        cache-to: type=registry,ref={{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:buildcache,mode=max
  {{end}}

