name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: {{`${{ matrix.node-version }}`}}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Security audit
      run: npm audit --audit-level=moderate || true

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm test -- --coverage

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-{{.ProjectName}}

  {{if .IncludeDocker}}
  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: {{`${{ secrets.DOCKER_USERNAME }}`}}
        password: {{`${{ secrets.DOCKER_PASSWORD }}`}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          {{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:latest
          {{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:{{`${{ github.sha }}`}}
        cache-from: type=registry,ref={{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:buildcache
        cache-to: type=registry,ref={{`${{ secrets.DOCKER_USERNAME }}`}}/{{.ProjectName}}:buildcache,mode=max
  {{end}}

