"""
Authentication Middleware
Generated by bffgen
"""

from fastapi import Request, HTTPException
from jose import jwt, JWTError
from typing import Optional
import logging

from config import settings

logger = logging.getLogger(__name__)


async def verify_jwt_token(token: str) -> Optional[dict]:
    """
    Verify JWT token and return payload
    
    Args:
        token: JWT token string
    
    Returns:
        Token payload if valid, None otherwise
    """
    try:
        payload = jwt.decode(
            token,
            settings.JWT_SECRET,
            algorithms=[settings.JWT_ALGORITHM]
        )
        return payload
    except JWTError as e:
        logger.warning(f"JWT verification failed: {e}")
        return None


async def get_token_from_request(request: Request) -> Optional[str]:
    """
    Extract JWT token from request
    
    Args:
        request: FastAPI request object
    
    Returns:
        JWT token if found, None otherwise
    """
    # Check Authorization header
    auth_header = request.headers.get("Authorization")
    if auth_header and auth_header.startswith("Bearer "):
        return auth_header.split(" ")[1]
    
    # Check cookie
    token = request.cookies.get("access_token")
    if token:
        return token
    
    return None


async def require_authentication(request: Request) -> dict:
    """
    Dependency that requires valid JWT authentication
    
    Args:
        request: FastAPI request object
    
    Returns:
        Token payload
    
    Raises:
        HTTPException: If authentication fails
    """
    token = await get_token_from_request(request)
    
    if not token:
        raise HTTPException(
            status_code=401,
            detail="Authentication required",
            headers={"WWW-Authenticate": "Bearer"},
        )
    
    payload = await verify_jwt_token(token)
    
    if not payload:
        raise HTTPException(
            status_code=401,
            detail="Invalid or expired token",
            headers={"WWW-Authenticate": "Bearer"},
        )
    
    return payload

