/**
 * Request Logging Plugin for Fastify
 * Auto-generated by bffgen
 * 
 * Enhanced logging for HTTP requests and responses
 */

const fp = require('fastify-plugin');

/**
 * Logging plugin
 */
async function loggingPlugin(fastify, options) {
  // Add request start time hook
  fastify.addHook('onRequest', async (request, reply) => {
    request.startTime = Date.now();
  });

  // Log request details in development
  fastify.addHook('preHandler', async (request, reply) => {
    if (process.env.NODE_ENV === 'development') {
      request.log.debug({
        msg: 'Incoming request',
        method: request.method,
        url: request.url,
        headers: request.headers,
        query: request.query,
        params: request.params,
        ip: request.ip,
        userId: request.user?.userId
      });
    }
  });

  // Log response details
  fastify.addHook('onResponse', async (request, reply) => {
    const duration = Date.now() - request.startTime;
    
    request.log.info({
      msg: 'Request completed',
      method: request.method,
      url: request.url,
      statusCode: reply.statusCode,
      duration: `${duration}ms`,
      userId: request.user?.userId,
      requestId: request.id
    });
  });

  // Log errors
  fastify.addHook('onError', async (request, reply, error) => {
    request.log.error({
      msg: 'Request error',
      method: request.method,
      url: request.url,
      error: error.message,
      stack: error.stack,
      userId: request.user?.userId,
      requestId: request.id
    });
  });
}

module.exports = fp(loggingPlugin, {
  name: 'logging-plugin'
});

