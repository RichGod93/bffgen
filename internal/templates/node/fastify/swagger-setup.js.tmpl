/**
 * Swagger Setup for Fastify
 * Auto-generated by bffgen
 */

const fp = require('fastify-plugin');
const swaggerConfig = require('./swagger-config');

/**
 * Swagger plugin for Fastify
 */
async function swaggerPlugin(fastify, options) {
  // Register @fastify/swagger for OpenAPI spec generation
  await fastify.register(require('@fastify/swagger'), {
    openapi: swaggerConfig,
    mode: 'dynamic',
    exposeRoute: true,
    routePrefix: '/api-docs.json',
    hideUntagged: false,
    transform: ({ schema, url }) => {
      // Transform route schemas if needed
      return { schema, url };
    }
  });

  // Register @fastify/swagger-ui for UI
  await fastify.register(require('@fastify/swagger-ui'), {
    routePrefix: '/api-docs',
    uiConfig: {
      docExpansion: 'list',
      deepLinking: true,
      displayOperationId: false,
      defaultModelsExpandDepth: 1,
      defaultModelExpandDepth: 1,
      defaultModelRendering: 'model',
      displayRequestDuration: true,
      filter: true,
      showExtensions: false,
      showCommonExtensions: false,
      tryItOutEnabled: true
    },
    uiHooks: {
      onRequest: function (request, reply, next) { next(); },
      preHandler: function (request, reply, next) { next(); }
    },
    staticCSP: true,
    transformStaticCSP: (header) => header,
    transformSpecification: (swaggerObject, request, reply) => {
      return swaggerObject;
    },
    transformSpecificationClone: true
  });

  fastify.log.info('ðŸ“š Swagger UI available at: http://localhost:' + (process.env.PORT || '8080') + '/api-docs');
  fastify.log.info('ðŸ“„ OpenAPI spec available at: http://localhost:' + (process.env.PORT || '8080') + '/api-docs.json');
}

module.exports = fp(swaggerPlugin, {
  name: 'swagger-plugin'
});

