name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.21", "1.22"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download

      - name: Run tests with race detector
        run: go test -race -v -coverprofile=coverage.out ./...

      - name: Run linter
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --enable=gosec,gocritic,gocyclo,ineffassign,misspell

      - name: Security scan
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -quiet -exclude=G104,G304,G306,G301,G114,G107 -exclude-dir=test-project ./...

      - name: Build
        run: make build

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.out

  integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Build bffgen
        run: make build

      - name: Test generated Go project
        run: |
          ./bffgen init test-go --lang go --framework chi
          cd test-go
          go test -race ./...
          go build ./...

      - name: Test generated Node.js project
        run: |
          ./bffgen init test-node --lang nodejs-express
          cd test-node
          npm install
          npm audit --audit-level=moderate
          npm test
