name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.21", "1.22"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download

      - name: Run tests with race detector
        run: go test -race -v -coverprofile=coverage.out ./...

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Check code formatting
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "‚ùå Code is not formatted"
            gofmt -s -l .
            exit 1
          fi
          echo "‚úÖ Code formatting is correct"

      - name: Run linter
        run: golangci-lint run --timeout=5m ./...

      - name: Security scan
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -quiet -exclude=G104,G304,G306,G301,G114,G107 -exclude-dir=test-project ./...

      - name: Build
        run: make build

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.out

  integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build bffgen
        run: make build

      - name: Verify binary works
        run: |
          ./bffgen --version
          ./bffgen --help

      - name: Test doctor command
        run: |
          ./bffgen doctor || echo "Doctor command completed"

      - name: Verify commands are available
        run: |
          ./bffgen generate --help
          ./bffgen init --help
          ./bffgen add-route --help
          ./bffgen config --help
          ./bffgen postman --help

      - name: CI/CD Summary
        if: success()
        run: |
          echo "‚úÖ All CI/CD checks passed!"
          echo "üìä Status: Tests, Linting, Security Scan, and Integration Tests successful"
          echo "üöÄ Ready for release or merge"
